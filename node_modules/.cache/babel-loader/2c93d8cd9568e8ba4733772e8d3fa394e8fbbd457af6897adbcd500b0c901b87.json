{"ast":null,"code":"import React from\"react\";import projects from\"../data/Projects.json\";import ProjectCard from\"./ProjectCard\";import\"./ProjectsStyles.css\";import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const Projects=()=>{return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"title\",children:\"Projects\"}),/*#__PURE__*/_jsx(\"section\",{className:\"containers\",id:\"projects\",children:/*#__PURE__*/_jsx(\"div\",{className:\"projects\",children:projects.map((project,id)=>{return/*#__PURE__*/_jsx(ProjectCard,{project:project},id);})})})]});};export default Projects;","map":{"version":3,"names":["React","projects","ProjectCard","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","Projects","children","className","id","map","project"],"sources":["/Users/mac/seb/sandbox/portfolio/src/components/Projects/Projects.js"],"sourcesContent":["import React from \"react\";\nimport projects from \"../data/Projects.json\";\nimport ProjectCard from \"./ProjectCard\";\nimport \"./ProjectsStyles.css\";\nconst Projects = () => {\n  return (\n    <>\n      <h2 className='title'>Projects</h2>\n      <section className='containers' id=\"projects\">\n\n        <div className='projects'>\n          {projects.map( ( project, id ) => {\n            return <ProjectCard key={id} project={project} />;\n          } )}\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Projects;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,MAAO,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBAC9B,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB,mBACED,KAAA,CAAAF,SAAA,EAAAI,QAAA,eACEN,IAAA,OAAIO,SAAS,CAAC,OAAO,CAAAD,QAAA,CAAC,UAAQ,CAAI,CAAC,cACnCN,IAAA,YAASO,SAAS,CAAC,YAAY,CAACC,EAAE,CAAC,UAAU,CAAAF,QAAA,cAE3CN,IAAA,QAAKO,SAAS,CAAC,UAAU,CAAAD,QAAA,CACtBT,QAAQ,CAACY,GAAG,CAAE,CAAEC,OAAO,CAAEF,EAAE,GAAM,CAChC,mBAAOR,IAAA,CAACF,WAAW,EAAUY,OAAO,CAAEA,OAAQ,EAArBF,EAAuB,CAAC,CACnD,CAAE,CAAC,CACA,CAAC,CACC,CAAC,EACV,CAAC,CAEP,CAAC,CAED,cAAe,CAAAH,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}